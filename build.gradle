buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.joonhyuk'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

ext {
    set('springCloudVersion', '2021.0.4')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // 동시성 LOCk을 위한 분산락 Redisson 활용
    implementation 'org.redisson:redisson:3.20.1'
    implementation ('it.ozimov:embedded-redis:0.7.3') { exclude group: "org.slf4j", module: "slf4j-simple" }

    //유효성 검사
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //mysql 연결
    implementation 'mysql:mysql-connector-java:8.0.33'

    // 엔티티들의 변경이력 자동 관리를 위한 envers
    implementation 'org.springframework.data:spring-data-envers'

    // swagger 추가
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // 랜덤 문자열 생성을 위한 lang 추가
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    //json 사용을 위한 json
    implementation 'org.json:json:20230618'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
//--------------------------- querydsl 설정------------------------------
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//---------------------------------------------------------


tasks.named('test') {
    useJUnitPlatform()
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }

}